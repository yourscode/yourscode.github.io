for循环的特殊用法:
   for(表达式1; 表达式2 ; 表达式3){}
   可以省略任意表达式
   但是一定要在循环内部或者外部将表达式进行补充完整,
   表达式1和表达式三可以写多个表达式用逗号隔开


   什么是数组?
     在一个变量中保存多个数据
     数组是按照线形顺序来排列的--线性结构
     数组中: 除了第一个和最后一个元素,每个元素都有一个直接"前驱元素"
     数组中: 除了最后一个元素,每个元素都有一个"后继元素"
    声明数组
       语法:var 数组名 =[];    创建数组时不知道数组的内容
       var 数组名 = [元素1,元素2....
       
       
       for in
       遍历出任意数组中的字符串下标以及索引下标
         语法:  
         for(var 变量 in 数组){
           //变量: 字符串下标 或 索引下标
           }


冒泡排序:1 2 3 4 5 
    排序算法之一,将一组数据进行排序,小的数据往前排,大的数字往后排,
    var = [23,9,78,34,56];
    两两比较,小的靠前
    第一轮比较五个数字,比较4次  5 - 1
    第二轮比较四个数字,比较3次  5 - 2
    第三轮比较三个数字,比较2次  5 - 3
    第四轮比较两个数字,比较1次  5 - 4
    n个数字 n- 1轮
    for(var i = 1 ; i < arr.length ; i++){
      for(var j = 0 ; j < arr.length ; j++){
        //数字位置的交换
        交换两个数字的位置:  异或换位
        j: 第一个元素
        j+1 : 第二个元素
        arr[j] 和 arr[j + 1]换位
      }
    }

数组的常用方法
  toString();
    将一个数组转换成字符串,并返回转换后的结果
    语法: var str = 数组名.toString();
  join();
    作用: 将数组后面的元素通过指定的字符串连接,
  concat();
    拼接两个或更多的数据,并返回拼接后的结果,
    语法: var result = 数组1.concat(数组2,数组3,数组4,...)
    注意:  concat不会修改原有的数组,而会返回拼接后的结果,
          要拼接的数据可以是数组也可以是普通数据
  slice();
    作用: 截取子数组,从指定的数组中,截取几个连续的元素组成一个新的数组
    语法: var arr = 数组名.slice(star,end)
    star : 从那个下标位置处开始截取,取值为正,从前往后算,取值为负,从后往前算
    end : 指定结束位置处的下标(不包含),该参数可以省略,如果省略的话,就 
                0     1       2        3        
    var c = ["中国","美国","俄罗斯","加拿大"];
              -4      -3     -2     -1    

  splice();
     作用: 允许从指定的数组中,删除一部分元素,同时再添加另一部分元素
     语法: 数组名.splice(star,count,e1,e2...)
     star: 指定要添加或者要删除的元素起始位置下标的位置
     count: 指定要添加或者要删除的元素的个数
     e1 e2 :   指要增加的新元素,可以是多个元素
     返回值: 返回一个由被删除的元素所组成的数组
     注意点: 该函数会改变原有的数组,
  reverse();
    作用: 将一数组反转
    语法: 数组名.reverse();
    注意: 该函数会改变当前数组的内容
  sort();
    作用: 默认情况下,按照数组元素的Unicode码进行升序排列
