位运算符
   >> << & ^
   右移是把数变小,左移把数变大
   &  按位与  
      判断ji基偶性  结果为1,奇数,结果为0,偶数
   |   按位或   对小数进行取整
      将任意小数与0按位或,结果 则取整数部分
      var num = 123.23;
      var ret = num 0;
      console.log(ret);
      ^  按位异或   用于两个数的交换
      二进制位数,逐位比较,不同为1, 相同为0
      var a= 3;   //011
      var b = 5;  //101
        011  
        101
        ----
        110    //a = 6;
      a = a ^ b;
        101  
        110
        ----
        011    //b = 3;
      b = b ^ a;
        110  
        011
        ----
        101    //b = 5;
      a = a ^ b;
      赋值运算符 
        三目运算
           条件表达式 ? 表达式A : 表达式B;


day02
    函数: function
      函数是一段预定好,可以被反复执行的代码块

    带返回值的声明和调用
作用域表示的是变量或函数的可访问的范围js中的作用域,分为两种
  (1)函数作用域: 只在某函数范围内有效在函数作用域中的变量称为局部变量 
  (2)全局作用域: 代码在任何位置都有效,在全局作用域内的变量称为全局变量
注意: 声明变量的时候不使用var,无论任何位置声明都是全局变量,但是这种写法是不推荐的
提示: 函数的形参也是该函数内部的局部作用域变量,
什么是声明提前?
   js程序在正式执行之前,function声明的函数,会将所有var声明的变量都预读到所在作用域的顶部,但 赋值还是保留在原位
   不仅变量会声明提前,在js中函数也是有这个功能
变量的值传递
   在给函数的形参赋值为一个变量做实参时,是将外部变量值做了一份拷贝,然后传递给了形参--这样就形成了两个相同值的形参
   此后若形参的值发生了改变,不会再影响外部变量的值啦 
函数的作用域
 与变量中作用域类似,函数作用域分为两种
    (1)局部作用域函数
    (2)全局作用域函数
    function 函数名(){
        ...
        function 函数名(){
            ...
        }
    }
parseInt();   将其他类型的数据转换成整数
parseFloat(); 将其他类型的数据转换为浮点数
isNaN();    判断指定的值是否为NaN
递归调用
    什么是递归: 在一个函数的内部来调用自己
if判定条件为布尔值,如果不是布尔值,以下条件会作为false
if(0)   if(null)   if(NaN)
如果是数字会作为true

switch(值/表达式){
    case 值 1:
    语句块1;
    break;
    case 值 2:
    语句块2;
    break;
    case 值 3:
    语句块3;
    break;
    case 值 4:
    语句块4;
    break;
    case 值 5:
    语句块5;
    break;

}