什么是一次性定时器?
    什么是一次性定时器: 先让程序等待一段时间,再延迟执行一项任务
    how? 
        1.定义任务函数
        2.启动定时器 var timer = setTimeout(task,延迟ms);
        3.停止定时器:   clearTimeout(timer);
    定时器原理:
        在启动定时器时,创建一个定时器对象,创建一个定时器对象,保存要执行的函数
        定时器对象会按指定时间,自动将要执行的函数,加入回调队列
        回调队列必须等待主程序都执行完,才能开始执行.
        笔试题: 一般都会考setTimerout/setInterval是在主程序执行完后再执行


navigator  
    what? 保存浏览器配置信息的对象
    when? 只要获得浏览器的配置信息
    1.cookieEnabled: 判断当前浏览器是否启用cookie
    cookie:  客户端永久存储用户私密信息的小文件
    为什么: 程序中的数据都保存在内存中的,都是临时的,一旦程序关闭,内存释放,那么数据就会丢失
    何时: 只要希望在客户端持久存储数据的时候   
    plugins : 包含浏览器安装装的所有插件信息的集合,
        插件: 为浏览器添加新功能的小软件,
    如何判断: navigator.plugins["完整的插件名"]!== undefined
    3.userAgent: 包含了浏览器名称和版本号的字符串
        何时: 只要判断浏览器的名称和版本号时

event
    what? 浏览器自动触发的,或者用户手动触发的页面内容状态的改变
    事件处理函数: 当事件发生时,自动执行的函数
    how:
        在HTMl中     <ANY on事件名 = "调用js中的函数/js语句"></ANY>
        传统: 讲究样式,内容,行为的分离
        但是现在讲究组件开发,它要求一个小组件的HTml,CSS,JS集中定义在一起不要分离

/*正则表达式部分:
        let reg = reg.test(str);
        let arr = str.match(reg);
        let neeStr = str.replace(reg,"帅哥");
*/