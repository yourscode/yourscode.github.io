var creMap={};var mapLoaded=function(conf){if(conf==undefined||conf==null){alert("地图配置获取异常，请检查配置");return;}
requireModule(function(){for(var i=0;i<conf.proxyRule.length;i++){var curValue=conf.proxyRule[i];creMap.urlUtils.addProxyRule({urlPrefix:curValue.urlPrefix,proxyUrl:curValue.proxyUrl});}
var baseLayers=[];var extendBaseLayer=[];if(conf.baseLayerUrl.varlayer!=""){var varlayer=new creMap.TileLayer({id:"varlayer",url:conf.baseLayerUrl.varlayer,layerId:"varlayer"});baseLayers.push(varlayer);extendBaseLayer.push("varlayer");}
if(conf.baseLayerUrl.imglayer!=""){var imglayer=new creMap.TileLayer({id:"imglayer",url:conf.baseLayerUrl.imglayer,visible:false,layerId:"imglayer"});baseLayers.push(imglayer)
extendBaseLayer.push("imglayer");}
if(conf.baseLayerUrl.varimglayer!=""){var varimglayer=new creMap.TileLayer({id:"varimglayer",url:conf.baseLayerUrl.varimglayer,visible:false,layerId:"varimglayer"});baseLayers.push(varimglayer)
extendBaseLayer.push("varimglayer");}
var customBasemap=new creMap.Basemap({baseLayers:baseLayers,title:"Creation Basemap",id:"creBasemap"});var map=new creMap.Map({basemap:customBasemap,});var view=new creMap.MapView({container:conf.container,map:map,});view.constraints.rotationEnabled=false;if(typeof(conf.center)=="object"){view.center=conf.center;}
if(typeof(conf.zoom)=="object"){if(typeof(conf.zoom.default)=="number")
view.zoom=conf.zoom.default;if(typeof(conf.zoom.minZoom)=="number")
view.constraints.minZoom=conf.zoom.minZoom;if(typeof(conf.zoom.maxZoom)=="number")
view.constraints.maxZoom=conf.zoom.maxZoom;}
if(typeof(conf.extent)=="object"){view.extent=conf.extent;}
creMap.ExtendObj.conf=conf;creMap.ExtendObj.map=map;creMap.ExtendObj.view=view;creMap.ExtendObj.baseLayer=extendBaseLayer;creMap.ExtendObj.istransferxy=true;if(typeof(MapEventServiceImpl)!='undefined'){IMapEventService.prototype=new MapEventServiceImpl();}
var mapService=new IMapEventService();window.$M=mapService;});};var requireModule=function(callback){require(["esri/Map","esri/config","esri/Basemap","esri/layers/TileLayer","esri/views/MapView","esri/core/urlUtils","esri/widgets/Sketch","esri/layers/GraphicsLayer","esri/Graphic","esri/geometry/Circle","esri/geometry/Point","esri/geometry/Polyline","esri/geometry/Polygon","esri/geometry/Extent","esri/widgets/Zoom","esri/geometry/geometryEngine","esri/views/2d/draw/Draw","esri/symbols/PictureMarkerSymbol","esri/PopupTemplate","esri/geometry/support/webMercatorUtils","esri/widgets/DistanceMeasurement2D","esri/widgets/AreaMeasurement2D","esri/renderers/HeatmapRenderer","esri/layers/FeatureLayer"],function(Map,esriConfig,Basemap,TileLayer,MapView,urlUtils,Sketch,GraphicsLayer,Graphic,Circle,Point,Polyline,Polygon,Extent,Zoom,geometryEngine,Draw,PictureMarkerSymbol,PopupTemplate,webMercatorUtils,DistanceMeasurement2D,AreaMeasurement2D,HeatmapRenderer,FeatureLayer){creMap.Map=Map;creMap.esriConfig=esriConfig;creMap.Basemap=Basemap
creMap.TileLayer=TileLayer;creMap.MapView=MapView;creMap.urlUtils=urlUtils;creMap.Sketch=Sketch;creMap.GraphicsLayer=GraphicsLayer;creMap.Graphic=Graphic;creMap.Circle=Circle;creMap.Point=Point;creMap.Polyline=Polyline;creMap.Polygon=Polygon;creMap.Extent=Extent;creMap.Zoom=Zoom;creMap.geometryEngine=geometryEngine;creMap.Draw=Draw;creMap.PictureMarkerSymbol=PictureMarkerSymbol;creMap.webMercatorUtils=webMercatorUtils;creMap.PopupTemplate=PopupTemplate;creMap.DistanceMeasurement2D=DistanceMeasurement2D;creMap.AreaMeasurement2D=AreaMeasurement2D;creMap.HeatmapRenderer=HeatmapRenderer;creMap.FeatureLayer=FeatureLayer;esriConfig.fontsUrl=location.pathname.replace(/\/[^/]+$/,'/arcgismap/')+"/assets/fonts"
creMap.ExtendObj={};if(typeof(callback)=="function")
callback();});}
var geometryFromWKT=function(){}
geometryFromWKT.prototype={parseToPoint:function(wkt){return this.parseToGeometry(wkt);},parseToPolyline:function(wkt){return this.parseToGeometry(wkt);},parseToPolygonTo:function(wkt){return this.parseToGeometry(wkt);},replaceFormat:function(swkt){swkt=swkt.replace("(","").replace("(","").replace(")","").replace(")","").replace("((","").replace("))","");if(swkt.indexOf("(")>-1||swkt.indexOf(")")>-1){swkt=this.replaceFormat(swkt);}
return swkt;},parseToGeometry:function(wkt){var wktStr=wkt;var geometry=null;if(!wkt||typeof(wkt)!="string")return geometry;var hindex=wkt.indexOf("(");var headerStr=wkt.substring(0,hindex).toUpperCase();wkt=wkt.substring(hindex);wkt=this.replaceFormat(wkt);var pointsArr=new Array();var pointsString=wkt.split(",");for(var i=0;i<pointsString.length;i++){var p=pointsString[i].split(" ");if(p[0]!="")
pointsArr.push({x:p[0],y:p[1]});else
pointsArr.push({x:p[1],y:p[2]});}
if(wktStr.indexOf("POINT")>-1){geometry=pointsArr[0];}else if(wktStr.indexOf("LINESTRING")>-1||wktStr.indexOf("POLYGON")>-1){geometry={points:pointsArr};}else if(wktStr.indexOf("ENVELOPE")>-1){geometry={points:pointsArr};}
return geometry;}};var geometryToWKT=function(){}
geometryToWKT.prototype={pointToString:function(point){return this.geometryToString(point);},polylineToString:function(polyline){return this.geometryToString(polyline);},polygonToString:function(polygon){var wktString="POLYGON((";for(var i=0;i<polygon.points.length;i++){var p=polygon.points[i];if(typeof(p.x)!="undefined"&&typeof(p.y)!="undefined")
wktString=wktString+p.x+" "+p.y+", ";}
wktString=wktString.substring(0,wktString.length-2)+"))";return wktString;},geometryToString:function(geometry){var wktString="";if(geometry){if(geometry.minX&&geometry.minY&&geometry.maxX&&geometry.maxY){geometry.points=[{x:geometry.minX,y:geometry.minY},{x:geometry.minX,y:geometry.maxY},{x:geometry.maxX,y:geometry.maxY},{x:geometry.maxX,y:geometry.minY},{x:geometry.minX,y:geometry.minY}];}
if(geometry.x&&geometry.y){geometry=MercatorToLonLat(geometry);wktString="POINT("+geometry.x+" "+geometry.y+")";}
else if(geometry.points&&typeof(geometry.points.length)!="undefined"){for(var i=0;i<geometry.points.length;i++){geometry.points[i]=MercatorToLonLat(geometry.points[i]);}
var first=geometry.points[0];var last=geometry.points[geometry.points.length-1];if(first.x==last.x&&first.y==last.y){wktString="POLYGON((";for(var i=0;i<geometry.points.length;i++){var p=geometry.points[i];wktString=wktString+p.x+" "+p.y+", ";}
wktString=wktString.substring(0,wktString.length-2)+"))";}else{wktString="LINESTRING(";for(var i=0;i<geometry.points.length;i++){var p=geometry.points[i];wktString=wktString+p.x+" "+p.y+", ";}
wktString=wktString.substring(0,wktString.length-2)+")";}}}
return wktString;}};Error.prototype.selfException=null;Error.prototype.disposeException=function(){var exStr="☺☺异常: "+this.name+"\r\n描述: "+this.message+"\r\n行号: "+this.lineNumber+"\r\n文件: "+this.fileName;alert(exStr);if(Error.selfException==null){Error.selfException=setInterval(function(){window.status=exStr;},100);}}
var pi=3.1415926535897932384626;var a=6378245.0;var ee=0.00669342162296594323;function Bd09ToLonLat(mercator){var vmercator={x:parseFloat(mercator.x),y:parseFloat(mercator.y)}
var x=vmercator.x-0.0065,y=vmercator.y-0.006;var z=Math.sqrt(x*x+y*y)-0.00002*Math.sin(y*pi);var theta=Math.atan2(y,x)-0.000003*Math.cos(x*pi);var gg_lon=z*Math.cos(theta);var gg_lat=z*Math.sin(theta);var gps=TransForm(gg_lat,gg_lon);var lontitude=gg_lon*2-gps.X;var latitude=gg_lat*2-gps.Y;mercator.x=lontitude;mercator.y=latitude;return mercator;}
function LonLatToBd09(mercator){var vmercator={x:parseFloat(mercator.x),y:parseFloat(mercator.y)}
var dLat=TransFormLat(vmercator.x-105.0,vmercator.y-35.0);var dLon=TransFormLon(vmercator.x-105.0,vmercator.y-35.0);var radLat=vmercator.y/180.0*pi;var magic=Math.sin(radLat);magic=1-ee*magic*magic;var sqrtMagic=Math.sqrt(magic);dLat=(dLat*180.0)/((a*(1-ee))/(magic*sqrtMagic)*pi);dLon=(dLon*180.0)/(a/sqrtMagic*Math.cos(radLat)*pi);var mgLat=vmercator.y+dLat;var mgLon=vmercator.x+dLon;var x=mgLon,y=mgLat;var z=Math.sqrt(x*x+y*y)+0.00002*Math.sin(y*pi);var theta=Math.atan2(y,x)+0.000003*Math.cos(x*pi);var bd_lon=z*Math.cos(theta)+0.0065;var bd_lat=z*Math.sin(theta)+0.006;mercator.x=bd_lon;mercator.y=bd_lat;return mercator;}
function GCJ02ToWGS84(lat,lon){var mercator={};var gps=TransForm(lat,lon);var lontitude=lon*2-gps.X;var latitude=lat*2-gps.Y;mercator.X=lontitude;mercator.Y=latitude;return mercator;}
function TransForm(lat,lon){var dLat=TransFormLat(lon-105.0,lat-35.0);var dLon=TransFormLon(lon-105.0,lat-35.0);var radLat=lat/180.0*pi;var magic=Math.sin(radLat);magic=1-ee*magic*magic;var sqrtMagic=Math.sqrt(magic);dLat=(dLat*180.0)/((a*(1-ee))/(magic*sqrtMagic)*pi);dLon=(dLon*180.0)/(a/sqrtMagic*Math.cos(radLat)*pi);var mgLat=lat+dLat;var mgLon=lon+dLon;return{X:mgLon,Y:mgLat};}
function TransFormLat(x,y){var ret=-100.0+2.0*x+3.0*y+0.2*y*y+0.1*x*y
+0.2*Math.sqrt(Math.abs(x));ret+=(20.0*Math.sin(6.0*x*pi)+20.0*Math.sin(2.0*x*pi))*2.0/3.0;ret+=(20.0*Math.sin(y*pi)+40.0*Math.sin(y/3.0*pi))*2.0/3.0;ret+=(160.0*Math.sin(y/12.0*pi)+320*Math.sin(y*pi/30.0))*2.0/3.0;return ret;}
function TransFormLon(x,y){var ret=300.0+x+2.0*y+0.1*x*x+0.1*x*y+0.1*Math.sqrt(Math.abs(x));ret+=(20.0*Math.sin(6.0*x*pi)+20.0*Math.sin(2.0*x*pi))*2.0/3.0;ret+=(20.0*Math.sin(x*pi)+40.0*Math.sin(x/3.0*pi))*2.0/3.0;ret+=(150.0*Math.sin(x/12.0*pi)+300.0*Math.sin(x/30.0*pi))*2.0/3.0;return ret;}
function MercatorToLonLat(mercator,b){if(b){var vmercator={x:parseFloat(mercator.x),y:parseFloat(mercator.y)}
var x=vmercator.x/20037508.34*180;var y=vmercator.y/20037508.34*180;y=180/Math.PI*(2*Math.atan(Math.exp(y*Math.PI/180))-Math.PI/2);mercator.x=x;mercator.y=y;}else if(typeof(dojoConfig)!="undefined"&&dojoConfig.source.spatial&&dojoConfig.source.spatial=="3857"){if(mercator.x.toString().indexOf(".")>4){var vmercator={x:parseFloat(mercator.x),y:parseFloat(mercator.y)}
var x=vmercator.x/20037508.34*180;var y=vmercator.y/20037508.34*180;y=180/Math.PI*(2*Math.atan(Math.exp(y*Math.PI/180))-Math.PI/2);mercator.x=x;mercator.y=y;}}
return mercator;}
function LonLatToMercator(lonlat,b){if(b){var vlonlat={x:parseFloat(lonlat.x),y:parseFloat(lonlat.y)}
var x=vlonlat.x*20037508.34/180;var y=Math.log(Math.tan((90+vlonlat.y)*Math.PI/360))/(Math.PI/180);y=y*20037508.34/180;lonlat.x=x;lonlat.y=y;}else if(typeof(dojoConfig)!="undefined"&&dojoConfig.source.spatial&&dojoConfig.source.spatial=="3857"){if(lonlat.x.toString().indexOf(".")<4){var vlonlat={x:parseFloat(lonlat.x),y:parseFloat(lonlat.y)}
var x=vlonlat.x*20037508.34/180;var y=Math.log(Math.tan((90+vlonlat.y)*Math.PI/360))/(Math.PI/180);y=y*20037508.34/180;lonlat.x=x;lonlat.y=y;}}
return lonlat;}
function LonLatTo25D(wkt,fun){var arg="";var geoConvert=new geometryFromWKT();var geo=geoConvert.parseToGeometry(wkt);if(wkt.indexOf("POINT")!=-1){arg="{geometryType:'esriGeometryPoint',geometry:{x:"+geo.x+",y:"+geo.y+",spatialReference:{wkid:4326}}}";}
if(wkt.indexOf("LINESTRING")!=-1){var pointStr="";for(var i=0;i<geo.points.length;i++){var curpoint=geo.points[i];pointStr=pointStr+"["+curpoint.x+","+curpoint.y+"],"}
if(pointStr.length>0)
pointStr=pointStr.substring(0,pointStr.length-1);arg="{geometryType:'esriGeometryPolyline',geometry:{paths:[["+pointStr+"]],spatialReference:{wkid:4326}}}";}
if(wkt.indexOf("POLYGON")!=-1){var pointStr="";for(var i=0;i<geo.points.length;i++){var curpoint=geo.points[i];pointStr=pointStr+"["+curpoint.x+","+curpoint.y+"],"}
if(pointStr.length>0)
pointStr=pointStr.substring(0,pointStr.length-1);arg="{geometryType:'esriGeometryPolygon',geometry:{rings:[["+pointStr+"]],spatialReference:{wkid:4326}}}";}
if(wkt.indexOf("ENVELOPE")!=-1){var pointStr=" xmin : "+geo.points[0].x+" , ymin : "+geo.points[0].y+" , xmax : "+geo.points[1].x+" , ymax : "+geo.points[1].y;arg="{geometryType:'esriGeometryEnvelope',extent:{ "+pointStr+" ,spatialReference:{wkid:4326}}}";}
var url="http://10.197.1.131:6080/arcgis/rest/services/Images/YinChuanImage/MapServer/exts/AffineTransformationSOE/AffineTransformation?AffineTransformationGeometry2D="+escape(arg)+"&AffineTransformationGeometry25D=&LenghtMeasuresGeometry2D=&LenghtMeasuresGeometry25D=&AreaMeasuresGeometry2D=&AreaMeasuresGeometry25D=&f=pjson&callback=?";$.getJSON(url,function(e){if(e.error){}else{if(arg.indexOf("esriGeometryPoint")!=-1&&e.AffineTransformationGeometry2D){var wkt="POINT(";if(e.AffineTransformationGeometry2D){wkt+=e.AffineTransformationGeometry2D.x+" "+e.AffineTransformationGeometry2D.y+")";}
e.wkt=wkt;}
if(arg.indexOf("esriGeometryPolyline")!=-1){var wkt="LINESTRING(";if(e.AffineTransformationGeometry2D.paths){for(var i=0;i<e.AffineTransformationGeometry2D.paths[0].length;i++){wkt+=e.AffineTransformationGeometry2D.paths[0][i][0]+" "+e.AffineTransformationGeometry2D.paths[0][i][1]+",";}
wkt=wkt.substring(0,wkt.length-1)+")";}
e.wkt=wkt;}
if(arg.indexOf("esriGeometryPolygon")!=-1){var wkt="POLYGON((";if(e.AffineTransformationGeometry2D.rings){for(var i=0;i<e.AffineTransformationGeometry2D.rings[0].length;i++){wkt+=e.AffineTransformationGeometry2D.rings[0][i][0]+" "+e.AffineTransformationGeometry2D.rings[0][i][1]+",";}
wkt=wkt.substring(0,wkt.length-1)+"))";}
e.wkt=wkt;}
if(arg.indexOf("esriGeometryEnvelope")!=-1){var wkt="ENVELOPE((";if(e.AffineTransformationGeometry2D.rings){wkt+=e.AffineTransformationGeometry2D.rings[0][0][0]+" "+e.AffineTransformationGeometry2D.rings[0][0][1]+"),(";wkt+=e.AffineTransformationGeometry2D.rings[0][1][0]+" "+e.AffineTransformationGeometry2D.rings[0][1][1]+"))";}
e.wkt=wkt;}}
fun(e)});}
function LonLatTo2D(wkt,fun){var arg="";var geoConvert=new geometryFromWKT();var geo=geoConvert.parseToGeometry(wkt);if(wkt.indexOf("POINT")!=-1){arg="{geometryType:'esriGeometryPoint',geometry:{x:"+geo.x+",y:"+geo.y+",spatialReference:{wkid:4326}}}";}
if(wkt.indexOf("LINESTRING")!=-1){var pointStr="";for(var i=0;i<geo.points.length;i++){var curpoint=geo.points[i];pointStr=pointStr+"["+curpoint.x+","+curpoint.y+"],"}
if(pointStr.length>0)
pointStr=pointStr.substring(0,pointStr.length-1);arg="{geometryType:'esriGeometryPolyline',geometry:{paths:[["+pointStr+"]],spatialReference:{wkid:4326}}}";}
if(wkt.indexOf("POLYGON")!=-1){var pointStr="";for(var i=0;i<geo.points.length;i++){var curpoint=geo.points[i];pointStr=pointStr+"["+curpoint.x+","+curpoint.y+"],"}
if(pointStr.length>0)
pointStr=pointStr.substring(0,pointStr.length-1);arg="{geometryType:'esriGeometryPolygon',geometry:{rings:[["+pointStr+"]],spatialReference:{wkid:4326}}}";}
if(wkt.indexOf("ENVELOPE")!=-1){var pointStr=" xmin : "+geo.points[0].x+" , ymin : "+geo.points[0].y+" , xmax : "+geo.points[1].x+" , ymax : "+geo.points[1].y;arg="{geometryType:'esriGeometryEnvelope',extent:{ "+pointStr+" ,spatialReference:{wkid:4326}}}";}
var url="http://10.197.1.131:6080/arcgis/rest/services/Images/YinChuanImage/MapServer/exts/AffineTransformationSOE/AffineTransformation?AffineTransformationGeometry2D=&AffineTransformationGeometry25D="+escape(arg)+"&LenghtMeasuresGeometry2D=&LenghtMeasuresGeometry25D=&AreaMeasuresGeometry2D=&AreaMeasuresGeometry25D=&f=pjson&callback=?";$.getJSON(url,function(e){if(e.error){}else{if(arg.indexOf("esriGeometryPoint")!=-1){var wkt="POINT(";if(e.AffineTransformationGeometry25D){wkt+=e.AffineTransformationGeometry25D.x+" "+e.AffineTransformationGeometry25D.y+")";e.wkt=wkt;}}
if(arg.indexOf("esriGeometryPolyline")!=-1){var wkt="LINESTRING(";if(e.AffineTransformationGeometry25D.paths){for(var i=0;i<e.AffineTransformationGeometry25D.paths[0].length;i++){wkt+=e.AffineTransformationGeometry25D.paths[0][i][0]+" "+e.AffineTransformationGeometry25D.paths[0][i][1]+",";}
wkt=wkt.substring(0,wkt.length-1)+")";}
e.wkt=wkt;}
if(arg.indexOf("esriGeometryPolygon")!=-1){var wkt="POLYGON((";if(e.AffineTransformationGeometry25D.rings){for(var i=0;i<e.AffineTransformationGeometry25D.rings[0].length;i++){wkt+=e.AffineTransformationGeometry25D.rings[0][i][0]+" "+e.AffineTransformationGeometry25D.rings[0][i][1]+",";}
wkt=wkt.substring(0,wkt.length-1)+"))";}
e.wkt=wkt;}
if(arg.indexOf("esriGeometryEnvelope")!=-1){var wkt="ENVELOPE((";if(e.AffineTransformationGeometry25D.rings){wkt+=e.AffineTransformationGeometry25D.rings[0][0][0]+" "+e.AffineTransformationGeometry25D.rings[0][0][1]+"),(";wkt+=e.AffineTransformationGeometry25D.rings[0][1][0]+" "+e.AffineTransformationGeometry25D.rings[0][1][1]+"))";}
e.wkt=wkt;}}
fun(e)});}
function MapEventServiceImpl(){this.mapType="ArcGisForJavascript";this.geoToWKT=new geometryToWKT();this.geoFromWKT=new geometryFromWKT();this.cursorState="auto";this.draw=new creMap.Draw({view:creMap.ExtendObj.view});this.temp={graps:[],storage:{}};this.activeWidget=null;creMap.ExtendObj.view.on("click",function(event){creMap.ExtendObj.view.hitTest(event).then(function(response){if(response.results[0]){var graphic=response.results[0].graphic;if(graphic.attributes.defaultOptions){var defaultOptions=graphic.attributes.defaultOptions;if(typeof(defaultOptions.click)=="function"){if(typeof(graphic.attributes.tagert)=="string"){defaultOptions.attributes=graphic.attributes.tagert;}
defaultOptions.click(defaultOptions);}}}})});}
MapEventServiceImpl.prototype={listenerDrawGraphicImpl:function(options){var defaultOptions={sid:'0001',tagert:null,text:"新建信息点",url:"#",mode:1,isWindow:false,isCenter:false,layerId:"glayer",click:"",onsuccess:"",ico:{name:location.pathname.replace(/\/[^/]+$/,'/arcgismap/')+"assets/img/marker.png",height:30,width:22},style:{color:"#000000",fontSize:12,lineStyle:"solid",opacity:0.8,borderWidth:1,borderColor:"#000000",background:"#ffffff",fillStyle:"solid"}};defaultOptions=this.expand(defaultOptions,options);var modeArray=["none","point","line","polygon","rectangle","","","","","circle"];if(typeof(defaultOptions.mode)=="number"){defaultOptions.mode=modeArray[defaultOptions.mode];}
var selfobject=this;var draw=this.draw;switch(defaultOptions.mode){case"none":break;case"point":var action=draw.create("point",{mode:"click"});action.on("cursor-update",function(evt){$M.setMapCursorImpl("crosshair")});action.on("draw-complete",function(evt){$M.setMapCursorImpl("auto")
createPointGraphic(evt.coordinates);});function createPointGraphic(coordinates){var point={type:"point",x:coordinates[0],y:coordinates[1],spatialReference:creMap.ExtendObj.view.spatialReference};var markerSymbol={type:"picture-marker",url:defaultOptions.ico.name,width:defaultOptions.ico.width,height:defaultOptions.ico.height,};var pointGraphic=new creMap.Graphic({geometry:point,symbol:markerSymbol});var glayer=$M.getLayerImpl(defaultOptions.layerId);glayer.add(pointGraphic);if(typeof(defaultOptions.onsuccess)=="function"){var center={x:point.x,y:point.y};if(creMap.ExtendObj.istransferxy){center=MercatorToLonLat({x:center.x,y:center.y},true);var newPoint=GCJ02ToWGS84(center.y,center.x);center={x:newPoint.X,y:newPoint.Y};}
var wkt=selfobject.geoToWKT.pointToString({x:center.x,y:center.y});defaultOptions.bound={min:{},max:{},center:center};defaultOptions.onsuccess(wkt,defaultOptions);}}
break;case"line":var action=draw.create("polyline",{mode:"click"});action.on(["vertex-add","vertex-remove"],function(evt){createPolylineGraphic(evt.vertices);});action.on("cursor-update",function(evt){$M.setMapCursorImpl("crosshair")
createPolylineGraphic(evt.vertices);});action.on("draw-complete",function(evt){$M.setMapCursorImpl("auto")
createPolylineGraphic(evt.vertices,"complete");});var tempGraphic;function createPolylineGraphic(vertices,state){creMap.ExtendObj.view.graphics.remove(tempGraphic);var polyline={type:"polyline",paths:vertices,spatialReference:creMap.ExtendObj.view.spatialReference};tempGraphic=new creMap.Graphic({geometry:polyline,symbol:{type:"simple-line",color:defaultOptions.style.color,width:defaultOptions.style.borderWidth,cap:"round",join:"round",style:defaultOptions.style.lineStyle}});if(state!="complete")
creMap.ExtendObj.view.graphics.add(tempGraphic);if(state=="complete"){var point84=[];for(var i=0;i<vertices.length;i++){if(creMap.ExtendObj.istransferxy){var merPoint=MercatorToLonLat({x:vertices[i][0],y:vertices[i][1]},true);var newPoint=GCJ02ToWGS84(merPoint.y,merPoint.x);point84.push({x:newPoint.X,y:newPoint.Y});}else{point84.push(MercatorToLonLat({x:vertices[i][0],y:vertices[i][1]},true));}}
var wkt=selfobject.geoToWKT.polylineToString({points:point84});$M.drawLineToMapImpl({pointlist:wkt,layerId:defaultOptions.layerId,style:defaultOptions.style});if(typeof(defaultOptions.onsuccess)=="function"){defaultOptions.onsuccess(wkt,defaultOptions);}}}
break;case"polygon":var action=draw.create("polyline",{mode:"click"});action.on(["vertex-add","vertex-remove"],function(evt){createPolygonGraphic(evt.vertices);});action.on("cursor-update",function(evt){$M.setMapCursorImpl("crosshair")
createPolygonGraphic(evt.vertices);});action.on("draw-complete",function(evt){$M.setMapCursorImpl("auto")
createPolygonGraphic(evt.vertices,"complete");});var tempGraphic;function createPolygonGraphic(vertices,state){creMap.ExtendObj.view.graphics.remove(tempGraphic);var polygon=new creMap.Polygon({hasZ:false,hasM:false,rings:vertices,spatialReference:creMap.ExtendObj.view.spatialReference});tempGraphic=new creMap.Graphic({geometry:polygon,symbol:{type:"simple-fill",color:defaultOptions.style.background,style:defaultOptions.style.fillStyle,outline:{color:defaultOptions.style.borderColor,width:defaultOptions.style.borderWidth,style:defaultOptions.style.lineStyle}}});if(state!="complete")
creMap.ExtendObj.view.graphics.add(tempGraphic);if(state=="complete"){var point84=[];for(var i=0;i<vertices.length;i++){if(creMap.ExtendObj.istransferxy){var merPoint=MercatorToLonLat({x:vertices[i][0],y:vertices[i][1]},true);var newPoint=GCJ02ToWGS84(merPoint.y,merPoint.x);point84.push({x:newPoint.X,y:newPoint.Y});}else{point84.push(MercatorToLonLat({x:vertices[i][0],y:vertices[i][1]},true));}}
if(creMap.ExtendObj.istransferxy){var merPoint=MercatorToLonLat({x:vertices[0][0],y:vertices[0][1]},true);var newPoint=GCJ02ToWGS84(merPoint.y,merPoint.x);point84.push({x:newPoint.X,y:newPoint.Y});}else{point84.push(MercatorToLonLat({x:vertices[0][0],y:vertices[0][1]},true));}
var wkt=selfobject.geoToWKT.polygonToString({points:point84});$M.drawPolygonImpl({pointlist:wkt,layerId:defaultOptions.layerId,style:defaultOptions.style});if(typeof(defaultOptions.onsuccess)=="function"){var extent=polygon.extent;var center={x:extent.center.longitude,y:extent.center.latitude};var max={x:extent.xmax,y:extent.ymax};var min={x:extent.xmin,y:extent.ymin};if(creMap.ExtendObj.istransferxy){max=MercatorToLonLat({x:max.x,y:max.y},true);min=MercatorToLonLat({x:min.x,y:min.y},true);var maxPoint=GCJ02ToWGS84(max.y,max.x);var minPoint=GCJ02ToWGS84(min.y,min.x);max={x:maxPoint.X,y:maxPoint.Y};min={x:minPoint.X,y:minPoint.Y};var newPoint=GCJ02ToWGS84(center.y,center.x);center={x:newPoint.X,y:newPoint.Y}}
var bound={min:min,max:max,center:center};defaultOptions.bound=bound;defaultOptions.onsuccess(selfobject.geoToWKT.polygonToString({points:point84}),defaultOptions);}}}
break;case"circle":var action=draw.create("circle",{mode:"click"});action.on("vertex-remove",function(evt){createCircleGraphic(evt.vertices);});action.on("cursor-update",function(evt){$M.setMapCursorImpl("crosshair")
createCircleGraphic(evt.vertices);});action.on("draw-complete",function(evt){$M.setMapCursorImpl("auto")
createCircleGraphic(evt.vertices,"complete");});var tempGraphic;function createCircleGraphic(vertices,state){if(vertices.length<2){return}
creMap.ExtendObj.view.graphics.remove(tempGraphic);var center=new creMap.Point({hasZ:false,hasM:false,x:vertices[0][0],y:vertices[0][1],spatialReference:creMap.ExtendObj.view.spatialReference});var dis=center.distance(new creMap.Point({hasZ:false,hasM:false,x:vertices[1][0],y:vertices[1][1],spatialReference:creMap.ExtendObj.view.spatialReference}));var circle=new creMap.Circle({hasZ:false,hasM:false,center:center,radius:dis,spatialReference:creMap.ExtendObj.view.spatialReference});tempGraphic=new creMap.Graphic({geometry:circle,symbol:{type:"simple-fill",color:defaultOptions.style.background,style:defaultOptions.style.fillStyle,outline:{color:defaultOptions.style.borderColor,width:defaultOptions.style.borderWidth,style:defaultOptions.style.lineStyle}}});if(state!="complete")
creMap.ExtendObj.view.graphics.add(tempGraphic);if(state=="complete"){var point84=[];for(var i=0;i<circle.rings[0].length-1;i++){if(creMap.ExtendObj.istransferxy){var merPoint=MercatorToLonLat({x:circle.rings[0][i][0],y:circle.rings[0][i][1]},true);var newPoint=GCJ02ToWGS84(merPoint.y,merPoint.x);point84.push({x:newPoint.X,y:newPoint.Y});}else{point84.push(MercatorToLonLat({x:circle.rings[0][i][0],y:circle.rings[0][i][1]},true));}}
var wkt=selfobject.geoToWKT.polygonToString({points:point84});$M.drawPolygonImpl({pointlist:wkt,layerId:defaultOptions.layerId,style:defaultOptions.style});if(typeof(defaultOptions.onsuccess)=="function"){var extent=circle.extent;var center={x:extent.center.longitude,y:extent.center.latitude};var max={x:extent.xmax,y:extent.ymax};var min={x:extent.xmin,y:extent.ymin};if(creMap.ExtendObj.istransferxy){max=MercatorToLonLat({x:max.x,y:max.y},true);min=MercatorToLonLat({x:min.x,y:min.y},true);var maxPoint=GCJ02ToWGS84(max.y,max.x);var minPoint=GCJ02ToWGS84(min.y,min.x);max={x:maxPoint.X,y:maxPoint.Y};min={x:minPoint.X,y:minPoint.Y};var newPoint=GCJ02ToWGS84(center.y,center.x);center={x:newPoint.X,y:newPoint.Y}}
var bound={min:min,max:max,center:center};defaultOptions.bound=bound;defaultOptions.onsuccess(wkt,defaultOptions);}}}
break;case"rectangle":var action=draw.create("rectangle",{mode:"click"});action.on("vertex-remove",function(evt){createRectangleGraphic(evt.vertices);});action.on("cursor-update",function(evt){$M.setMapCursorImpl("crosshair")
createRectangleGraphic(evt.vertices);});action.on("draw-complete",function(evt){$M.setMapCursorImpl("auto")
createRectangleGraphic(evt.vertices,"complete");});var tempGraphic;function createRectangleGraphic(vertices,state){if(vertices.length<2){return}
creMap.ExtendObj.view.graphics.remove(tempGraphic);var rings=[vertices[0],[vertices[0][0],vertices[1][1]],vertices[1],[vertices[1][0],vertices[0][1]]];var polygon=new creMap.Polygon({hasZ:false,hasM:false,rings:[rings],spatialReference:creMap.ExtendObj.view.spatialReference});tempGraphic=new creMap.Graphic({geometry:polygon,symbol:{type:"simple-fill",color:defaultOptions.style.background,style:defaultOptions.style.fillStyle,outline:{color:defaultOptions.style.borderColor,width:defaultOptions.style.borderWidth,style:defaultOptions.style.lineStyle}}});if(state!="complete")
creMap.ExtendObj.view.graphics.add(tempGraphic);if(state=="complete"){var extent=polygon.extent;var center={x:extent.center.longitude,y:extent.center.latitude};var max={x:extent.xmax,y:extent.ymax};var min={x:extent.xmin,y:extent.ymin};if(creMap.ExtendObj.istransferxy){max=MercatorToLonLat({x:max.x,y:max.y},true);min=MercatorToLonLat({x:min.x,y:min.y},true);var maxPoint=GCJ02ToWGS84(max.y,max.x);var minPoint=GCJ02ToWGS84(min.y,min.x);max={x:maxPoint.X,y:maxPoint.Y};min={x:minPoint.X,y:minPoint.Y};}
var bound={min:min,max:max,center:center};$M.drawEnvelopeImpl({maxPoint:max,minPoint:min,layerId:defaultOptions.layerId,style:defaultOptions.style});if(typeof(defaultOptions.onsuccess)=="function"){var wkt=selfobject.geoToWKT.polylineToString({minX:min.x,minY:min.y,maxX:max.x,maxY:max.y});defaultOptions.bound=bound;defaultOptions.onsuccess(wkt,defaultOptions);}}}
break;}},getLayerImpl:function(layerId){layerId=layerId==undefined?"glayer":layerId;var graphicslayer=null;creMap.ExtendObj.map.allLayers.find(function(layer){if(layer.layerId==layerId){graphicslayer=layer;return graphicslayer;}});if(graphicslayer==null){graphicslayer=new creMap.GraphicsLayer({layerId:layerId});creMap.ExtendObj.map.add(graphicslayer);}
return graphicslayer;},drawPointToMapImpl:function(options){var defaultOptions={sid:'0001',tagert:null,text:"",url:"#",x:0,y:0,isWindow:false,isCenter:false,isReplace:false,layerId:"glayer",click:"",onsuccess:"",ico:{name:location.pathname.replace(/\/[^/]+$/,'/arcgismap/')+"assets/img/marker.png",height:30,width:22},style:{color:"#000000",fontSize:12,lineStyle:"dash",opacity:0.8,borderWidth:1,borderColor:"#000000",background:"#ffffff"},isOpenWindow:false,popup:{height:200,width:430},isFlicker:false};defaultOptions=this.expand(defaultOptions,options);if(options.style)
defaultOptions.style=this.expand(defaultOptions.style,options.style);if(defaultOptions.x==0||defaultOptions.y==0){var err=new Error();err.name="信息点经纬度异常";err.message="经纬度不能为空。";throw err;}
if(creMap.ExtendObj.istransferxy){var newPoint=TransForm(defaultOptions.y,defaultOptions.x);defaultOptions.x=newPoint.X;defaultOptions.y=newPoint.Y;}
var point={type:"point",x:defaultOptions.x,y:defaultOptions.y};var markerSymbol={type:"picture-marker",url:defaultOptions.ico.name,width:defaultOptions.ico.width,height:defaultOptions.ico.height,};var pointGraphic=new creMap.Graphic({geometry:point,symbol:markerSymbol,attributes:{defaultOptions:defaultOptions}});var glayer=$M.getLayerImpl(defaultOptions.layerId);glayer.add(pointGraphic);if(defaultOptions.text!=""){$M.drawLabelToMap({text:defaultOptions.text,layerId:defaultOptions.layerId,x:defaultOptions.x,y:defaultOptions.y,is$M:true,style:{fontSize:defaultOptions.style.fontSize,color:defaultOptions.style.color}});}
if(defaultOptions.isWindow&&defaultOptions.url!="#"&&defaultOptions.url!=""){pointGraphic.popupTemplate=$M.setPopupImpl(defaultOptions,defaultOptions.x,defaultOptions.y);}
if(defaultOptions.isCenter)
$M.setViewCenterImpl({x:defaultOptions.x,y:defaultOptions.y,is$M:true});if(typeof(defaultOptions.onsuccess)=="function"){var wkt=this.geoToWKT.pointToString({x:point.x,y:point.y});defaultOptions.bound={min:{},max:{},center:{x:point.x,y:point.y}};defaultOptions.onsuccess(wkt,defaultOptions);}
return this;},drawLabelToMapImpl:function(options){var defaultOptions={sid:'0001',tagert:null,text:"新建信息点",url:"#",x:0,y:0,isWindow:false,isCenter:false,isReplace:false,is$M:false,layerId:"glayer",click:"",onsuccess:"",style:{color:"#000000",fontSize:12,lineStyle:"dash",opacity:0.8,borderWidth:0,borderColor:"#000000",background:"#ffffff",family:"Microsoft YaHei",}};defaultOptions=this.expand(defaultOptions,options);if(options.style)
defaultOptions.style=this.expand(defaultOptions.style,options.style);if(defaultOptions.x==0||defaultOptions.y==0){var err=new Error();err.name="信息点经纬度异常";err.message="经纬度不能为空。";err.disposeException();return;}
if(!defaultOptions.is$M&&creMap.ExtendObj.istransferxy){var newPoint=TransForm(defaultOptions.y,defaultOptions.x);defaultOptions.x=newPoint.X;defaultOptions.y=newPoint.Y;}
var point={type:"point",x:defaultOptions.x,y:defaultOptions.y,};var textSymbol={type:"text",color:defaultOptions.style.color,haloColor:defaultOptions.style.borderColor,haloSize:defaultOptions.style.borderWidth,text:defaultOptions.text,xoffset:0,yoffset:20,font:{size:defaultOptions.style.fontSize,family:defaultOptions.style.family,}};var textGraphic=new creMap.Graphic({geometry:point,symbol:textSymbol});var glayer=$M.getLayerImpl(defaultOptions.layerId);glayer.add(textGraphic);if(defaultOptions.isCenter)
$M.setViewCenterImpl({x:defaultOptions.x,y:defaultOptions.y,is$M:true});if(typeof(defaultOptions.onsuccess)=="function"){var wkt=this.geoToWKT.pointToString({x:point.x,y:point.y});defaultOptions.bound={min:{},max:{},center:{x:point.x,y:point.y}};defaultOptions.onsuccess(wkt,defaultOptions);}
return this;},drawLineToMapImpl:function(options){var defaultOptions={sid:"0001",tagert:"",url:"#",text:"",pointlist:"",isWindow:false,isCenter:false,isReplace:false,layerId:"glayer",click:"",onsuccess:"",isOpenWindow:false,popup:{height:200,width:430},ico:{name:location.pathname.replace(/\/[^/]+$/,'/arcgismap/')+"assets/img/marker.png",height:30,width:22},style:{color:"#000000",fontSize:12,lineStyle:"solid",opacity:0.8,borderWidth:1,borderColor:"#000000",background:"#ffffff"}};defaultOptions=this.expand(defaultOptions,options);var wkt="";var pointlist=new Array();if(typeof(defaultOptions.pointlist)=="string"){if(defaultOptions.pointlist.indexOf("LINESTRING")==-1||defaultOptions.pointlist.indexOf("(")==-1||defaultOptions.pointlist.indexOf(")")==-1){alert("参数据不是标准WKT格式数据。");return;}
wkt=defaultOptions.pointlist;var geo=this.geoFromWKT.parseToPolyline(defaultOptions.pointlist);for(var i=0;i<geo.points.length;i++){if(creMap.ExtendObj.istransferxy){var newPoint=TransForm(geo.points[i].y*1,geo.points[i].x*1);pointlist.push([newPoint.X,newPoint.Y]);}else{pointlist.push([geo.points[i].x,geo.points[i].y]);}}}
if(typeof(defaultOptions.pointlist)=="object"){pointlist=defaultOptions.pointlist;if(creMap.ExtendObj.istransferxy){for(var i=0;i<pointlist.length;i++){var newPoint=TransForm(pointlist[i][1],pointlist[i][0]);pointlist[i][1]=newPoint.Y;pointlist[i][0]=newPoint.X;}}}
var polyline=new creMap.Polyline({type:"polyline",paths:pointlist});var tempGraphic=new creMap.Graphic({geometry:polyline,symbol:{type:"simple-line",color:defaultOptions.style.color,width:defaultOptions.style.borderWidth,cap:"round",join:"round",style:defaultOptions.style.lineStyle},attributes:{defaultOptions:defaultOptions}});var glayer=$M.getLayerImpl(defaultOptions.layerId);glayer.add(tempGraphic);var center={x:polyline.extent.center.longitude,y:polyline.extent.center.latitude};if(defaultOptions.isCenter)
$M.setViewCenterImpl(center);if(defaultOptions.text!=""){$M.drawLabelToMap({text:defaultOptions.text,layerId:defaultOptions.layerId,x:center.x,y:center.y,is$M:true,style:{fontSize:defaultOptions.style.fontSize,color:defaultOptions.style.color}});}
if(defaultOptions.isWindow&&defaultOptions.url!="#"&&defaultOptions.url!=""){tempGraphic.popupTemplate=$M.setPopupImpl(defaultOptions,center.x,center.y);}
if(typeof(defaultOptions.onsuccess)=="function"){var minPoint=creMap.ExtendObj.istransferxy==true?GCJ02ToWGS84(polyline.extent.ymin,polyline.extent.xmin):{X:polyline.extent.xmin,Y:polyline.extent.ymin};var maxPoint=creMap.ExtendObj.istransferxy==true?GCJ02ToWGS84(polyline.extent.ymax,polyline.extent.xmax):{X:polyline.extent.xmax,Y:polyline.extent.ymax};defaultOptions.bound={min:{x:minPoint.X,y:minPoint.Y},max:{x:maxPoint.X,y:maxPoint.Y},center:center};if(typeof(wkt)=="string"){defaultOptions.onsuccess(wkt,defaultOptions);}}},drawPolygonImpl:function(options){var defaultOptions={sid:'0001',tagert:null,text:"",url:"#",pointlist:"",isWindow:false,isCenter:false,isReplace:false,layerId:"glayer",layerLevel:false,click:"",onsuccess:"",isOpenWindow:false,popup:{height:200,width:430},style:{color:"#000000",fontSize:12,lineStyle:"solid",opacity:0.8,borderWidth:1,borderColor:"#000000",background:"#ffffff",fillStyle:"solid"},isFlicker:false};defaultOptions=this.expand(defaultOptions,options);if(!options.pointlist){alert("数据点集合不能为空。");return;}
var wkt="";var pointlist=new Array();if(typeof(defaultOptions.pointlist)=="string"){if(defaultOptions.pointlist.indexOf("POLYGON")==-1||defaultOptions.pointlist.indexOf("((")==-1||defaultOptions.pointlist.indexOf("))")==-1){alert("参数据不是标准WKT格式数据。");return;}
wkt=defaultOptions.pointlist;var geo=this.geoFromWKT.parseToPolyline(defaultOptions.pointlist);for(var i=0;i<geo.points.length;i++){if(creMap.ExtendObj.istransferxy){var newPoint=TransForm(geo.points[i].y*1,geo.points[i].x*1);pointlist.push([newPoint.X,newPoint.Y]);}else{pointlist.push([geo.points[i].x,geo.points[i].y]);}}}
if(typeof(defaultOptions.pointlist)=="object"){pointlist=defaultOptions.pointlist;if(creMap.ExtendObj.istransferxy){for(var i=0;i<pointlist.length;i++){var newPoint=TransForm(pointlist[i][1],pointlist[i][0]);pointlist[i][1]=newPoint.Y;pointlist[i][0]=newPoint.X;}}}
var polygon=new creMap.Polygon({hasZ:false,hasM:false,rings:[pointlist],});var tempGraphic=new creMap.Graphic({geometry:polygon,symbol:{type:"simple-fill",color:defaultOptions.style.background,style:defaultOptions.style.fillStyle,outline:{color:defaultOptions.style.borderColor,width:defaultOptions.style.borderWidth,style:defaultOptions.style.lineStyle}},attributes:{defaultOptions:defaultOptions}});var glayer=$M.getLayerImpl(defaultOptions.layerId);glayer.add(tempGraphic);if(typeof(defaultOptions.layerLevel)=="number"){creMap.ExtendObj.map.reorder(glayer,defaultOptions.layerLevel)}
var extent=polygon.extent;var center={x:extent.center.longitude,y:extent.center.latitude};if(defaultOptions.isCenter)
$M.setViewCenterImpl(center);if(defaultOptions.text!=""){$M.drawLabelToMap({text:defaultOptions.text,layerId:defaultOptions.layerId,x:center.x,y:center.y,is$M:true,style:{fontSize:defaultOptions.style.fontSize,color:defaultOptions.style.color}});}
if(defaultOptions.isWindow&&defaultOptions.url!="#"&&defaultOptions.url!=""){tempGraphic.popupTemplate=$M.setPopupImpl(defaultOptions,center.x,center.y);}
if(typeof(defaultOptions.onsuccess)=="function"){var minPoint=creMap.ExtendObj.istransferxy==true?GCJ02ToWGS84(extent.ymin,extent.xmin):{X:extent.xmin,Y:extent.ymin};var maxPoint=creMap.ExtendObj.istransferxy==true?GCJ02ToWGS84(extent.ymax,extent.xmax):{X:extent.xmax,Y:extent.ymax};defaultOptions.bound={min:{x:minPoint.X,y:minPoint.Y},max:{x:maxPoint.X,y:maxPoint.Y},center:center};if(typeof(wkt)=="string"){defaultOptions.onsuccess(wkt,defaultOptions);}}},drawCircleImpl:function(options){var defaultOptions={sid:'0001',tagert:null,text:"",url:"#",x:0.0,y:0.0,radius:100,isWindow:false,isCenter:false,isReplace:false,layerId:"glayer",click:"",onsuccess:"",isOpenWindow:false,popup:{height:200,width:430},style:{color:"#000000",fontSize:12,lineStyle:"solid",opacity:0.8,borderWidth:1,borderColor:"#000000",background:"#ffffff",fillStyle:"solid"}};if(!options.x||!options.y){alert("经度，纬度不能为空。");return;}
if(!options.radius){alert("半径不能为空。");return;}
defaultOptions=this.expand(defaultOptions,options);defaultOptions.x=defaultOptions.x*1;defaultOptions.y=defaultOptions.y*1;if(options.style)
defaultOptions.style=this.expand(defaultOptions.style,options.style);if(creMap.ExtendObj.istransferxy){var newPoint=TransForm(defaultOptions.y,defaultOptions.x);defaultOptions.x=newPoint.X;defaultOptions.y=newPoint.Y;}
var center=new creMap.Point({hasZ:false,hasM:false,longitude:defaultOptions.x,latitude:defaultOptions.y,spatialReference:creMap.ExtendObj.view.spatialReference});var circle=new creMap.Circle({hasZ:false,hasM:false,center:center,radius:defaultOptions.radius,radiusUnit:'meters',spatialReference:creMap.ExtendObj.view.spatialReference});var tempGraphic=new creMap.Graphic({geometry:circle,symbol:{type:"simple-fill",color:defaultOptions.style.background,style:defaultOptions.style.fillStyle,outline:{color:defaultOptions.style.borderColor,width:defaultOptions.style.borderWidth,style:defaultOptions.style.lineStyle}},attributes:{defaultOptions:defaultOptions}});var glayer=$M.getLayerImpl(defaultOptions.layerId);glayer.add(tempGraphic);var extent=circle.extent;var center={x:extent.center.longitude,y:extent.center.latitude,is$M:true};if(defaultOptions.isCenter)
$M.setViewCenterImpl(center);if(defaultOptions.text!=""){$M.drawLabelToMap({text:defaultOptions.text,layerId:defaultOptions.layerId,x:center.x,y:center.y,is$M:true,style:{fontSize:defaultOptions.style.fontSize,color:defaultOptions.style.color}});}
if(defaultOptions.isWindow&&defaultOptions.url!="#"&&defaultOptions.url!=""){tempGraphic.popupTemplate=$M.setPopupImpl(defaultOptions,center.x,center.y);}
if(typeof(defaultOptions.onsuccess)=="function"){var max={x:extent.xmax,y:extent.ymax};var min={x:extent.xmin,y:extent.ymin};if(creMap.ExtendObj.istransferxy){var newPoint=GCJ02ToWGS84(extent.center.latitude,extent.center.longitude);max=MercatorToLonLat({x:extent.xmax,y:extent.ymax},true);min=MercatorToLonLat({x:extent.xmin,y:extent.ymin},true);var maxPoint=GCJ02ToWGS84(max.y,max.x);var minPoint=GCJ02ToWGS84(min.y,min.x);max={x:maxPoint.X,y:maxPoint.Y};min={x:minPoint.X,y:minPoint.Y};center={x:newPoint.X,y:newPoint.Y}
defaultOptions.x=newPoint.X
defaultOptions.y=newPoint.Y}
var bound={min:min,max:max,center:center};defaultOptions.bound=bound;var points=[];for(var i=0;i<circle.rings[0].length;i++){var newPoint={X:circle.rings[0][i][0],Y:circle.rings[0][i][1]};if(creMap.ExtendObj.istransferxy){newPoint=GCJ02ToWGS84(circle.rings[0][i][1],circle.rings[0][i][0]);}
points.push({x:newPoint.X,y:newPoint.Y});}
var wkt=this.geoToWKT.polygonToString({points:points});defaultOptions.onsuccess(wkt,defaultOptions);}},drawEnvelopeImpl:function(options){var defaultOptions={sid:'0001',tagert:null,text:"",url:"#",maxPoint:{x:0,y:0},minPoint:{x:0,y:0},isWindow:false,isCenter:false,isReplace:false,layerId:"glayer",click:"",onsuccess:"",isOpenWindow:false,popup:{height:200,width:430},style:{color:"#000000",fontSize:12,lineStyle:"solid",opacity:0.8,borderWidth:1,borderColor:"#000000",background:"#ffffff",fillStyle:"solid"}};if(!options.maxPoint.x||!options.maxPoint.y||!options.minPoint.x||!options.minPoint.y){alert("经度，纬度不能为空。");return;}
defaultOptions=this.expand(defaultOptions,options);if(options.style)
defaultOptions.style=this.expand(defaultOptions.style,options.style);var minPoint={X:defaultOptions.minPoint.x,Y:defaultOptions.minPoint.y};var maxPoint={X:defaultOptions.maxPoint.x,Y:defaultOptions.maxPoint.y};if(creMap.ExtendObj.istransferxy){minPoint=TransForm(defaultOptions.minPoint.y,defaultOptions.minPoint.x)
maxPoint=TransForm(defaultOptions.maxPoint.y,defaultOptions.maxPoint.x)}
var extent=new creMap.Extent({xmax:maxPoint.X,xmin:minPoint.X,ymax:maxPoint.Y,ymin:minPoint.Y});var tempGraphic=new creMap.Graphic({geometry:extent,symbol:{type:"simple-fill",color:defaultOptions.style.background,style:defaultOptions.style.fillStyle,outline:{color:defaultOptions.style.borderColor,width:defaultOptions.style.borderWidth,style:defaultOptions.style.lineStyle}},attributes:{defaultOptions:defaultOptions}});var glayer=$M.getLayerImpl(defaultOptions.layerId);glayer.add(tempGraphic);var ext=extent.extent;var center={x:ext.center.longitude,y:ext.center.latitude};if(creMap.ExtendObj.istransferxy){var newPoint=GCJ02ToWGS84(ext.center.latitude,ext.center.longitude);center={x:newPoint.X,y:newPoint.Y}}
if(defaultOptions.isCenter)
$M.setViewCenterImpl(center);if(defaultOptions.text!=""){$M.drawLabelToMap({text:defaultOptions.text,layerId:defaultOptions.layerId,x:center.x,y:center.y,style:{fontSize:defaultOptions.style.fontSize,color:defaultOptions.style.color}});}
if(defaultOptions.isWindow&&defaultOptions.url!="#"&&defaultOptions.url!=""){tempGraphic.popupTemplate=$M.setPopupImpl(defaultOptions,center.x,center.y);}
if(typeof(defaultOptions.onsuccess)=="function"){var max={x:ext.xmax,y:ext.ymax};var min={x:ext.xmin,y:ext.ymin};if(creMap.ExtendObj.istransferxy){max=MercatorToLonLat({x:ext.xmax,y:ext.ymax},true);min=MercatorToLonLat({x:ext.xmin,y:ext.ymin},true);var maxPoint=GCJ02ToWGS84(max.y,max.x);var minPoint=GCJ02ToWGS84(min.y,min.x);max={x:maxPoint.X,y:maxPoint.Y};min={x:minPoint.X,y:minPoint.Y};}
var bound={min:min,max:max,center:center};defaultOptions.bound=bound;var wkt=this.geoToWKT.polylineToString({minX:min.x,minY:min.y,maxX:max.x,maxY:max.y});defaultOptions.onsuccess(wkt,defaultOptions);}},builderHeatLayerImpl:function(options){var defaultOptions={pointlist:[],layerId:190614,style:{colors:[{color:"rgba(63, 40, 102, 0)",ratio:0},{color:"rgb(0,0,255)",ratio:0.25},{color:"rgb(0,255,0)",ratio:0.55},{color:"yellow",ratio:0.85},{color:"rgb(255,0,0)",ratio:1}],blurRadius:16,maxPixelIntensity:25,minPixelIntensity:0},onsuccess:""};if(options.pointlist.length<=0){alert("点集合不可为空");return;}
defaultOptions=this.expand(defaultOptions,options);var features=[];for(var i=0;i<defaultOptions.pointlist.length;i++){var spoint=defaultOptions.pointlist[i];if(creMap.ExtendObj.istransferxy){var newPoint=TransForm(spoint[1],spoint[0]);features.push({geometry:{type:"point",x:newPoint.X,y:newPoint.Y},attributes:{ObjectID:i,}});}else{features.push({geometry:{type:"point",x:spoint[0],y:spoint[1]},attributes:{ObjectID:i,}});}}
var renderer={type:"heatmap",colorStops:defaultOptions.style.colors,blurRadius:defaultOptions.style.blurRadius,maxPixelIntensity:defaultOptions.style.maxPixelIntensity,minPixelIntensity:defaultOptions.style.minPixelIntensity};var featureLayer=new creMap.FeatureLayer({layerId:defaultOptions.layerId,source:features,title:"热力图",objectIdField:"ObjectID",renderer:renderer});creMap.ExtendObj.map.add(featureLayer);if(typeof(defaultOptions.onsuccess)=="function"){defaultOptions.onsuccess();}},GetCoordByScreenImpl:function(options){var center={x:creMap.ExtendObj.view.center.longitude,y:creMap.ExtendObj.view.center.latitude};var min={x:creMap.ExtendObj.view.extent.xmin,y:creMap.ExtendObj.view.extent.ymin};var max={x:creMap.ExtendObj.view.extent.xmax,y:creMap.ExtendObj.view.extent.ymax};if(creMap.ExtendObj.istransferxy){max=MercatorToLonLat({x:max.x,y:max.y},true);min=MercatorToLonLat({x:min.x,y:min.y},true);var maxPoint=GCJ02ToWGS84(max.y,max.x);var minPoint=GCJ02ToWGS84(min.y,min.x);max={x:maxPoint.X,y:maxPoint.Y};min={x:minPoint.X,y:minPoint.Y};var newPoint=TransForm(center.y,center.x);center.x=newPoint.X;center.y=newPoint.Y;}
var bound={min:min,max:max,center:center};return bound;},clearLayersImpl:function(options){var defaultOptions={layerId:'',onsuccess:""};if(options==""||options==undefined){creMap.ExtendObj.view.graphics.removeAll();creMap.ExtendObj.map.removeAll();}else{if(typeof(options)=="object")
defaultOptions=this.expand(defaultOptions,options);else if(typeof(options)=="function")
defaultOptions.onsuccess=options;else if(typeof(options)=="string")
defaultOptions.layerId=options;creMap.ExtendObj.view.graphics.removeAll();if(defaultOptions.layerId=="heatmaplayer"){defaultOptions.layerId=190614}
var alllayer=creMap.ExtendObj.map.allLayers.items;for(var i=0;i<alllayer.length;i++){var layer=alllayer[i];if(layer.layerId==defaultOptions.layerId&&layer.type!="tile"){creMap.ExtendObj.map.remove(layer);if(typeof(defaultOptions.onsuccess)=="function")
defaultOptions.onsuccess();}}}},setViewCenterImpl:function(options){var defaultOptions={x:0.0,y:0.0,level:15,is$M:false};if(typeof(options)=="object")
defaultOptions=this.expand(defaultOptions,options);if(defaultOptions&&defaultOptions.x&&defaultOptions.y){defaultOptions.x=defaultOptions.x*1;defaultOptions.y=defaultOptions.y*1;if(creMap.ExtendObj.istransferxy){if(defaultOptions.is$M==false){var newPoint=TransForm(defaultOptions.y,defaultOptions.x);defaultOptions.x=newPoint.X;defaultOptions.y=newPoint.Y;goTo(defaultOptions)}else{goTo(defaultOptions)}}else{goTo(defaultOptions)}
function goTo(options){if(options.level)
creMap.ExtendObj.view.goTo({center:[options.x,options.y],zoom:options.level});else
creMap.ExtendObj.view.goTo({center:[options.x,options.y]});}}
return this;},zoomInImpl:function(options){var zoom=new creMap.Zoom({view:creMap.ExtendObj.view});zoom.zoomIn();},zoomOutImpl:function(options){var zoom=new creMap.Zoom({view:creMap.ExtendObj.view});zoom.zoomOut();},zoomPanImpl:function(options){},zoomMeterageImpl:function(options){if($M.activeWidget){$M.activeWidget.destroy();$M.activeWidget=null;}
if(options=="measure"){$M.activeWidget=new creMap.DistanceMeasurement2D({view:creMap.ExtendObj.view});$M.activeWidget.viewModel.newMeasurement();}
if(options=="measureArea"){$M.activeWidget=new creMap.AreaMeasurement2D({view:creMap.ExtendObj.view});$M.activeWidget.viewModel.newMeasurement();}},getZoomLevelImpl:function(options){if(typeof(options)=="function"){options({level:creMap.ExtendObj.view.zoom});}},mapInitializeImpl:function(options){if(typeof(mapInitialize)=="function"){try{mapInitialize(this)}catch(e){e.disposeException();}}},setMapCursorImpl:function(state){if(this.cursorState!=state){this.cursorState=state;document.getElementById(creMap.ExtendObj.conf.container).style.cursor=state;}},setPopupImpl:function(defaultOptions,x,y){if(defaultOptions.isWindow&&defaultOptions.url!="#"&&defaultOptions.url!=""){var popupContent=defaultOptions.url;if(defaultOptions.url.indexOf("http://")>-1||defaultOptions.url.indexOf("https://")>-1){popupContent='<iframe id="popupFrame" name="popupFrame" class="popup-frame" frameborder="0" scrolling="auto" style=" width: '+defaultOptions.popup.width+'px; height: '+defaultOptions.popup.height+'px;" src="'+defaultOptions.url+'"></iframe>';}else{popupContent='<div  style=" width: '+defaultOptions.popup.width+'px; height: '+defaultOptions.popup.height+'px;">'+popupContent+'</div>'}
var popupTemplate={title:defaultOptions.text,content:popupContent}
if(defaultOptions.isOpenWindow){creMap.ExtendObj.view.popup.location={longitude:x,latitude:y};creMap.ExtendObj.view.popup.open(popupTemplate)}
return popupTemplate;}},switchMapServerImpl:function(options){var layerkey="";switch(options){case 1:layerkey="varlayer";break;case 2:layerkey="imglayer";break;case 4:layerkey="varimglayer";break;}
if(layerkey=="")
return;var ishave=creMap.ExtendObj.baseLayer.indexOf(layerkey);if(ishave==-1)
return;var mapLayers=creMap.ExtendObj.map.allLayers.items;for(var i=0;i<mapLayers.length;i++){var ml=mapLayers[i];if(ml.type!="tile")
break;if(ml.id==layerkey){ml.visible=true;}else{ml.visible=false;}}},pointsSlideImpl:function(options){var defaultOptions={sid:'0001',tagert:null,url:"#",layerId:"realLayers",speed:5,click:"",onsuccess:"",isWindow:false,isOpenWindow:false,popup:{height:200,width:430},ico:{url:location.pathname.replace(/\/[^/]+$/,'/arcgismap/')+"assets/img/marker.png",width:22,height:30,isAngle:true},points:[]};defaultOptions=this.expand(defaultOptions,options);if(defaultOptions.points.length==0){alert("点集合不能为空。");return;}
var inPoints=defaultOptions;var realLayer=$M.getLayerImpl(inPoints.layerId);var symbol={type:"picture-marker",url:inPoints.ico.url,width:inPoints.ico.width,height:inPoints.ico.height};if($M.temp.storage!=={}){if($M.temp.storage){var tempStorage=$M.temp.storage;for(var key in $M.temp.storage){var item=$M.temp.storage[key].graphic;var isDelete=true;for(var i=0;i<inPoints.points.length;i++){var inpoint=inPoints.points[i];var inkey="real_"+inpoint.id;if(key==inkey){isDelete=false;break;}}
if(isDelete){realLayer.remove(item);delete tempStorage[key];}}
$M.temp.storage=tempStorage;}
for(var i=0;i<inPoints.points.length;i++){var item=inPoints.points[i];defaultOptions.tagert=item.id;var storageItem=$M.temp.storage["real_"+item.id];if(storageItem==null||storageItem==undefined){var newPoint={X:item.x,Y:item.y};if(creMap.ExtendObj.istransferxy){newPoint=TransForm(item.y,item.x);}
var realPoint=new creMap.Point({longitude:newPoint.X,latitude:newPoint.Y})
var tempSymbol={type:"picture-marker"};tempSymbol.url=typeof(item.ico)=="object"?item.ico.url:symbol.url;tempSymbol.width=typeof(item.ico)=="object"?item.ico.width:symbol.width;tempSymbol.height=typeof(item.ico)=="object"?item.ico.height:symbol.height;var pointGraphic=new creMap.Graphic({geometry:realPoint,symbol:tempSymbol,attributes:{defaultOptions:defaultOptions,tagert:item.id}});item.graphic=pointGraphic;realLayer.add(pointGraphic);if(defaultOptions.isWindow&&defaultOptions.url!="#"&&defaultOptions.url!=""){pointGraphic.popupTemplate=$M.setPopupImpl(defaultOptions,item.x,item.y);}}else{item.graphic=storageItem.graphic;if(item.x!=storageItem.x||item.y!=storageItem.y){if(typeof(item.ico)!='object'){item.ico=inPoints.ico;}
var newPoint={X:item.x,Y:item.y};if(creMap.ExtendObj.istransferxy){newPoint=TransForm(item.y,item.x);item.x=newPoint.X;item.y=newPoint.Y;}
var tempPoints=interpolation(storageItem,item,inPoints.speed);var angle=Math.ceil(getAngle(storageItem.x,storageItem.y,item.x,item.y));draw(tempPoints,angle,undefined,item.id);}else{var isToMap=true;for(var u=0;u<realLayer.graphics.length;u++){var grap=realLayer.graphics.items[u];if(storageItem.graphic.uid==grap.uid){isToMap=false;break;}}
if(isToMap){var realPoint=new creMap.Point({longitude:storageItem.x,latitude:storageItem.y})
var tempSymbol={type:"picture-marker"};tempSymbol.url=typeof(item.ico)=="object"?item.ico.url:symbol.url;tempSymbol.width=typeof(item.ico)=="object"?item.ico.width:symbol.width;tempSymbol.height=typeof(item.ico)=="object"?item.ico.height:symbol.height;var pointGraphic=new creMap.Graphic({geometry:realPoint,symbol:tempSymbol,attributes:{defaultOptions:defaultOptions,tagert:item.id}});item.graphic=pointGraphic;realLayer.add(pointGraphic);if(defaultOptions.isWindow&&defaultOptions.url!="#"&&defaultOptions.url!=""){var newPoint={X:item.x,Y:item.y};if(creMap.ExtendObj.istransferxy){newPoint=TransForm(item.y,item.x);}
pointGraphic.popupTemplate=$M.setPopupImpl(defaultOptions,newPoint.X,newPoint.Y);}}}}
var itemKey="real_"+item.id;$M.temp.storage[itemKey]=item;}}else{var graphics=[];var setStorage={};for(var i=0;i<inPoints.points.length;i++){var item=inPoints.points[i];defaultOptions.tagert=item.id;var newPoint={X:item.x,Y:item.y};if(creMap.ExtendObj.istransferxy){newPoint=TransForm(item.y,item.x);item.x=newPoint.X;item.y=newPoint.Y;}
var realPoint=new creMap.Point({longitude:newPoint.X,latitude:newPoint.Y})
var tempSymbol={type:"picture-marker"};tempSymbol.url=typeof(item.ico)=="object"?item.ico.url:symbol.url;tempSymbol.width=typeof(item.ico)=="object"?item.ico.width:symbol.width;tempSymbol.height=typeof(item.ico)=="object"?item.ico.height:symbol.height;var pointGraphic=new creMap.Graphic({geometry:realPoint,symbol:tempSymbol,attributes:{defaultOptions:defaultOptions,tagert:item.id}});item.graphic=pointGraphic;graphics.push(pointGraphic);var key="real_"+item.id;setStorage[key]=item;if(defaultOptions.isWindow&&defaultOptions.url!="#"&&defaultOptions.url!=""){pointGraphic.popupTemplate=$M.setPopupImpl(defaultOptions,item.x,item.y);}}
realLayer.addMany(graphics);$M.temp.storage=setStorage;}
var jstop=0;function draw(tempPoints,angle,index,tagert){var ref=setTimeout(function(){if(jstop==1){return;}
var j=index;if(index==undefined)
j=0;if(j<tempPoints.length-1){if(j==0&&$M.temp.graps.length>0){realLayer.removeMany($M.temp.graps);$M.temp.graps=[];}
var pointObj=new creMap.Point({longitude:tempPoints[j].x,latitude:tempPoints[j].y})
var tempAngle=typeof(angle)=="Number"?0:angle;if(typeof(tempPoints[j].ico)=="object"){if(tempPoints[j].ico.isAngle==false){tempAngle=0}}
var tempSymbol={type:"picture-marker"};tempSymbol.angle=tempAngle;tempSymbol.url=typeof(tempPoints[j].ico)=="object"?tempPoints[j].ico.url:symbol.url;tempSymbol.width=typeof(tempPoints[j].ico)=="object"?tempPoints[j].ico.width:symbol.width;tempSymbol.height=typeof(tempPoints[j].ico)=="object"?tempPoints[j].ico.height:symbol.height;var pointGraphic=new creMap.Graphic({geometry:pointObj,symbol:tempSymbol,attributes:{defaultOptions:defaultOptions,tagert:tagert}});realLayer.remove(tempPoints[j].graphic);tempPoints[j+1].graphic=pointGraphic;if(j==tempPoints.length-2){$M.temp.graps.push(pointGraphic);}
realLayer.add(pointGraphic);j++;if(defaultOptions.isWindow&&defaultOptions.url!="#"&&defaultOptions.url!=""){pointGraphic.popupTemplate=$M.setPopupImpl(defaultOptions,item.x,item.y);}
draw(tempPoints,angle,j,tagert);}
else{j=0;}},40);}
function interpolation(pointA,pointB,speed){var tmp=[];if(speed==undefined){speed=1;}
speed=speed-0.5;var count=Math.abs(speed)*25;var disX=(pointB.x-pointA.x)/count;var disY=(pointB.y-pointA.y)/count;var i=0;while(i<=count){var x=pointA.x+i*disX;var y=pointA.y+i*disY;tmp.push({x:x,y:y,graphic:pointA.graphic,ico:pointB.ico});i++;}
tmp.push(pointB);return tmp;}
function getAngle(startx,starty,endx,endy){var tan=0
if(endx==startx){tan=Math.atan(0)*180/Math.PI}else{tan=Math.atan(Math.abs((endy-starty)/(endx-startx)))*180/Math.PI}
if(endx>=startx&&endy>=starty)
{return-tan;}else if(endx>startx&&endy<starty)
{return tan;}else if(endx<startx&&endy>starty)
{return tan-180;}else{return 180-tan;}}},sessionUtils:{set:function(key,value){window.sessionStorage.setItem(key,JSON.stringify(value));},get:function(key){var value=window.sessionStorage.getItem(key);return JSON.parse(value);},remove:function(key){window.sessionStorage.removeItem(key);}},expand:function(source,clone){if(typeof(source)=="object"&&typeof(clone)=="object"){for(var attr in clone){if(typeof(clone[attr])!="undefined"){if(typeof(clone[attr])=="object"){source[attr]=this.expand(source[attr],clone[attr])}else{source[attr]=clone[attr];}}}}else{source=clone;}
return source;}}
function IBaseEvent(){this.listenerDrawGraphic=function(options){if(typeof(this.listenerDrawGraphicImpl)!="function"){alert("listenerDrawGraphic方法没有实现体，请实现地图事件接口");return;}
this.listenerDrawGraphicImpl(options);return this;}
this.graphicToMap=function(options){if(typeof(this.graphicToMapImpl)!="function"){alert("graphicToMap方法没有实现体，请实现地图事件接口");return;}
this.graphicToMapImpl(options);return this;}
this.getLayer=function(layerId){if(typeof(this.getLayerImpl)!="function"){alert("getLayer方法没有实现体，请实现地图事件接口");return;}
return this.getLayerImpl(layerId);}}
function IMapEventService(){try{if(IBaseEvent)
IBaseEvent.apply(this,arguments);}catch(e){}
this.Copyright="&copy BJCreation GIS 2019";this.Version="v5.0";this.mapType;this.layerService=function(options){if(typeof(this.layerServiceImpl)!="function"){alert("获取当前地图，请实现地图事件接口");return;}
return this.layerServiceImpl(options);}
this.draw25DBuildingNameLayer=function(layerid){if(typeof(this.draw25DBuildingNameLayerImpl)!="function"){alert("叠加2.5维图建筑物名称，请实现地图事件接口");return;}
return this.draw25DBuildingNameLayerImpl(layerid);}
this.RoutTaskMap=function(options){if(typeof(this.RoutTaskMapImpl)!="function"){alert("最短路径分析，请实现地图事件接口");return;}
return this.RoutTaskMapImpl(options);}
this.drawPointToMap=function(options){if(typeof(this.drawPointToMapImpl)!="function"){alert("画点方法没有实现体，请实现地图事件接口");return;}
this.drawPointToMapImpl(options);return this;}
this.drawLabelToMap=function(options){if(typeof(this.drawLabelToMapImpl)!="function"){alert("标注文本方法没有实现体，请实现地图事件接口");return;}
this.drawLabelToMapImpl(options);return this;}
this.drawLineToMap=function(options){if(typeof(this.drawLineToMapImpl)!="function"){alert("手绘路线方法没有实现体，请实现地图事件接口");return;}
this.drawLineToMapImpl(options);return this;}
this.drawPolygon=function(options){if(typeof(this.drawPolygonImpl)!="function"){alert("绘制多边形方法没有实现体，请实现地图事件接口");return;}
this.drawPolygonImpl(options);return this;}
this.drawTrack=function(options){if(typeof(this.DrawTrackImpl)!="function"){alert("绘制轨迹路线方法没有实现体，请实现地图事件接口");return;}
this.DrawTrackImpl(options);return this;}
this.clearLayers=function(options){if(typeof(this.clearLayersImpl)!="function"){alert("清除地图方法没有实现体，请实现地图事件接口");return;}
this.clearLayersImpl(options);return this;}
this.setViewCenter=function(options){if(typeof(this.setViewCenter)!="function"){alert("点居中方法没有实现体，请实现地图事件接口");return;}
this.setViewCenterImpl(options);return this;}
this.drawCircle=function(options){if(typeof(this.drawCircleImpl)!="function"){alert("绘制圆形方法没有实现体，请实现地图事件接口");return;}
this.drawCircleImpl(options);return this;}
this.drawEnvelope=function(options){if(typeof(this.drawEnvelopeImpl)!="function"){alert("绘制矩形方法没有实现体，请实现地图事件接口");return;}
this.drawEnvelopeImpl(options);return this;}
this.builderHeatLayer=function(options){this.builderHeatLayerImpl(options);return this;}
this.GetRandPoint=function(){return this.getRandPointImpl();}
this.mapToolDisplay=function(options){if(typeof(this.mapToolDisplayImpl)!="function"){alert("显示地图工具方法没有实现体，请实现地图事件接口");return;}
this.mapToolDisplayImpl(options);return this;}
this.layerVisibility=function(options){if(typeof(this.mapToolDisplayImpl)!="function"){alert("显示隐藏图层没有实现体，请实现地图事件接口");return;}
this.layerVisibilityImpl(options);return this;}
this.GetCoordByScreen=function(options){if(typeof(this.GetCoordByScreenImpl)!="function"){alert("获取屏幕视野方法没有实现体，请实现地图事件接口");return;}
return this.GetCoordByScreenImpl(options);}
this.zoomIn=function(options){if(typeof(this.zoomInImpl)!="function"){alert("地图放大操作没有实现体，请实现地图事件接口");return;}
this.zoomInImpl(options);}
this.zoomOut=function(options){if(typeof(this.zoomOutImpl)!="function"){alert("地图缩小操作没有实现体，请实现地图事件接口");return;}
this.zoomOutImpl(options);}
this.zoomPan=function(options){if(typeof(this.zoomPanImpl)!="function"){alert("地图漫游操作没有实现体，请实现地图事件接口");return;}
this.zoomPanImpl(options);}
this.zoomMeterage=function(options){if(typeof(this.zoomMeterageImpl)!="function"){alert("地图测量操作没有实现体，请实现地图事件接口");return;}
this.zoomMeterageImpl(options);}
this.mapBoundChange=function(options){if(typeof(this.mapBoundChangeImpl)!="function"){alert("地图范围改变事件没有实现体，请实现地图事件接口");return;}
this.mapBoundChangeImpl(options);}
this.switchMapServer=function(options){if(typeof(this.switchMapServerImpl)!="function"){alert("地图切换图层没有实现体，请实现地图事件接口");return;}
this.switchMapServerImpl(options);return this;}
this.getZoomLevel=function(options){if(typeof(this.getZoomLevelImpl)!="function"){alert("获得当前地图显示级别操作没有实现体，请实现地图事件接口");return;}
return this.getZoomLevelImpl(options);}
this.mapInitialize=function(options){if(typeof(this.mapInitializeImpl)!="function"){alert("地图初始化事件接口没有实现体，请实现地图事件接口");return;}
this.mapInitializeImpl(options);return this;}
this.bdConvertPoint=function(options){if(typeof(this.bdConvertPointImpl)!="function"){alert("地图转换接口没有实现体，请实现地图事件接口");return;}
this.bdConvertPointImpl(options);return this;}
this.pointsSlide=function(options){if(typeof(this.pointsSlideImpl)!="function"){alert("地图转换接口没有实现体，请实现地图事件接口");return;}
this.pointsSlideImpl(options);return this;}}